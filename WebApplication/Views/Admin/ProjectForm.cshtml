@model WebApplication.Models.ProjectViewModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<h2 id="title">New Project </h2>
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-horizontal">
        @Html.HiddenFor(e => Model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control col-md-6 col-sm-6 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control col-md-6 col-sm-6 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Client, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Client, new { htmlAttributes = new { @class = "form-control col-md-6 col-sm-6 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Client, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LogoPath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                <input type="file" id="LogoPath" class="form-control file-loading" accept="image/*" name="LogoPath" />
            </div>
        </div>

        <div class="form-group ">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-7">
                @*<input type="text" id="Category" name="Category" class="form-control col-md-7 col-xs-12">*@
                @Html.DropDownList("CategoryId", (SelectList)ViewBag.CategoryList,
                    "  -----Select Catrgory-----  ", new { @class = "form-control col-md-3 col-xs-12", @id = "addCategorys", @required = "required" })
            </div>
            <div class="col-md-1">
                <a class="btn btn-success AddCat" id="AddCat"><i class="glyphicon glyphicon-plus"></i>Add</a>
            </div>
        </div>
        <div class="form-group collapse" id="subDropDownDiv">
            @Html.LabelFor(model => model.SubCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7 ">
                <select id="SubCategoryId" name="SubCategoryId" data-val="true" class="form-control"></select>
            </div>
            <div class="col-md-1">
                <a class="btn btn-success" id="AddsubCat"><i class="glyphicon glyphicon-plus"></i>Add</a>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectImages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @*<label class="control-label">Select File</label>*@
                <input id="ProjectImages" name="ProjectImages" type="file" accept="image/*" multiple class="file-loading">
                @Html.HiddenFor(x => x.imagesNames)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6 col-sm-6 col-xs-12 col-lg-offset-0">
                @Html.CheckBox("IsActive", new { @class = " form-control " })
            </div>

        </div>

        <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
            <button type="submit" id="btnSubmit" class="btn btn-primary">Save</button>
            @Html.ActionLink("Back", "Projects", "Admin", new { @class = "btn btn-danger" })
        </div>
    </div>

}


<div id="SubCatModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <form id="SubForm" data-parsley-validate class="form-horizontal form-label-left">
                    <div class="form-group">
                        <input type="hidden" id="CategoryId" name="CategoryId" />
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="Name">
                            Category
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12 subcatdata">
                            <label class="control-label" id="displayCat"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="Name">
                            Name
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <input type="text" id="CatName" name="Name" class="form-control col-md-7 col-xs-12">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                    <button type="submit" id="btncancel" class="btn btn-danger" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnSubmitSub" class="btn btn-primary">Save</button>
                </div>

            </div>
        </div>
    </div>
</div>

<div id="CategoryModel" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <form id="CategoryForm" data-parsley-validate class="form-horizontal form-label-left">
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="Name">
                            Name
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <input type="text" id="CatName" name="Name" class="form-control col-md-7 col-xs-12">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                    <button type="submit" id="btncancel" class="btn btn-danger" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnSubmit" class="btn btn-primary">Save</button>
                </div>

            </div>
        </div>
    </div>
</div>

@section links{
    @*<link href="~/Content/bootstrap.min.css" rel="stylesheet" />*@

    <script>
        $(document).on('ready', function () {
            $("#ProjectImages").fileinput({
                overwriteInitial: false,
                initialCaption: "",
                uploadAsync: true,
                uploadUrl: '/Admin/AsycnImageUpload',
                deleteUrl: "/Admin/DeleteImage",
                dataType: 'json',
                @if (Model.ProjectImages != null && Model.ProjectImages.Any())
                {
                    @:initialPreview: [
                    foreach (var item in Model.ProjectImages)
                    {
                        @: "<img src='/Images/Projects/@item.FileName' class='file-preview-image' alt='@item.FileName' title='@item.FileName'>",
                    }
                    @:],
                                   @: initialPreviewAsData: true,
                                   @: initialPreviewConfig: [
                                   foreach (var item in Model.ProjectImages)
                    {
                        @:  { caption: "@item.FileName.Split('.').First()", size: 930321, width: "120px", key: @item.Id, showDelete: true },
                                    }

                  @:],
                                 }
                autoUpload: true,
                initialPreviewShowDelete:true,
                showUpload: false,
                showCaption: true,
                showRemove: false,
                showClose: false,
                maxFilePreviewSize: 100240
            }).on("filebatchselected", function (event, files) {
                // trigger upload method immediately after files are selected
                $("#ProjectImages").fileinput("upload");
            });

            $('#ProjectImages').on('filepredelete', function (event, key) {
                $.ajax({
                    url: "/Admin/DeleteProjectImage/" + key,
                    dataType: "json",
                    type: "GET",
                    contentType: 'application/json; charset=utf-8',
                    async: true,
                    processData: false,
                    cache: false,
                    success: function (data) {
                        //if (data == Boolean("true"))
                      
                    },
                    error: function (xhr) {
                        alert('error');
                    }
                });
            });


        });

        $("#LogoPath").fileinput({
            overwriteInitial: true,
            @if (Model.Id>0 && !string.IsNullOrEmpty(Model.LogoPathString))
            {
              @:  initialPreview: [
              @:  "<img src='/Images/Logo/@Model.LogoPathString' class='file-preview-image' alt='@Model.LogoPathString' title='@Model.LogoPathString'>"
              @:  ],
            }
            showUpload: false,
            showCaption: true,
            showRemove: false,
            showClose: false,
            browseClass: "btn btn-primary btn-md",
            fileType: "Image",
            previewFileIcon: "<i class='glyphicon glyphicon-king'></i>",
            previewSettings: { image: { width: "auto", height: "160px" } }
        });
        if ($('#addCategorys').val() !== "") {
            var CatId = $('#addCategorys').val();
            $("#subDropDownDiv").show();
            $.ajax({
                url: '/Admin/Fill',
                type: "GET",
                dataType: "JSON",
                data: { id: CatId },
                success: function (subCategory) {
                    // alert(JSON.stringify(subCategory));
                    $("#SubCategoryId").html(""); // clear before appending new list 
                    $("#SubCategoryId").append('<option>  -----Select Sub Catrgory-----  </option>');
                    $.each(subCategory, function (i, subCategory) {
                        $("#SubCategoryId").append('<option value="' + subCategory.Id + '">' + subCategory.Name + '</option>');
                    });
                    $("#SubCategoryId").val(@Model.SubCategoryId);
                    $("#SubCategoryId").change();
                }
            });
        }
    </script>

}
<script src="~/Scripts/Admin/JQScripts/ProjectForm.js"></script>
